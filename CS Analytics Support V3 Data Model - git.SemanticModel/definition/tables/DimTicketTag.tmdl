table DimTicketTag
	lineageTag: 306c19da-7d5d-4eab-b786-e7be9c0e4242

	column 'GHE Version Number' = ```
			
			IF (
			    CONTAINSSTRING ( DimTicketTag[Tag Name], "es_ver_ghe_" ),
			    SUBSTITUTE (
			        SUBSTITUTE ( DimTicketTag[Tag Name], "es_ver_ghe_", "" ),
			        "_",
			        "."
			    )
			)
			
			```
		lineageTag: aecd9863-4d6d-472f-b96a-61f263330cac
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

		annotation BestPracticeAnalyzer_IgnoreRules = {"RuleIDs":["AVOID_FLOATING_POINT_DATA_TYPES","AVOID_USING_THE_IFERROR_FUNCTION","OBJECTS_WITH_NO_DESCRIPTION"]}

	column 'Is Max GHE Version' = ```
			
			VAR max_version =
			    CALCULATE (
			        MAX ( DimTicketTag[TagSortOrder] ),
			        ALL ( DimTicketTag ),
			        DimTicketTag[GHE Version Number] <> "11.10"
			    )
			RETURN
			    IF ( DimTicketTag[TagSortOrder] = max_version, TRUE (), FALSE () )
			
			```
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: e25abf17-0e4c-4310-9bd6-d31c379d3a55
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

		annotation BestPracticeAnalyzer_IgnoreRules = {"RuleIDs":["OBJECTS_WITH_NO_DESCRIPTION"]}

	column TagSortOrder
		dataType: int64
		formatString: 0
		lineageTag: 4657a845-575a-4b18-a725-fbfe5e284448
		summarizeBy: none
		sourceColumn: TagSortOrder

		annotation SummarizationSetBy = Automatic

		annotation BestPracticeAnalyzer_IgnoreRules = {"RuleIDs":["OBJECTS_WITH_NO_DESCRIPTION"]}

	column 'Tag Name'
		dataType: string
		lineageTag: afc2fe27-038f-45be-8b98-1d1566bdeecc
		summarizeBy: none
		sourceColumn: Tag Name

		annotation SummarizationSetBy = Automatic

	column 'Tag ID'
		dataType: string
		lineageTag: aed0b7ea-35a1-46e8-9d96-375de61e21a2
		summarizeBy: none
		sourceColumn: Tag ID

		annotation SummarizationSetBy = Automatic

	partition DimTicketTag-6d8e8bcb-119a-4621-ac30-2f153967a4d4 = m
		mode: import
		source =
				let
				    Source = AzureDataExplorer.Contents("gh-analytics.eastus.kusto.windows.net", "service_cs_analytics", "let PadLeft3 = (s:string) {#(lf)    strcat(strrep(""0"", 3 - strlen(s)), s)#(lf)};#(lf)#(lf)let TicketTagVersion =#(lf)    database('service_cs_analytics').supportv3_ticket_tag_dim#(lf)    | where is_in_support_team == ""TRUE""#(lf)        and is_in_support_squad == ""TRUE""#(lf)        and has_ticket_within_two_years == ""TRUE""#(lf)    | extend VersionNumber = iif(#(lf)        tag_name in (""es_ver_ghe_unknown"", ""es_ver_ghe_older""),#(lf)        """",#(lf)        iif(tag_name hasprefix ""es_ver_ghe_"", substring(tag_name, 11), """")#(lf)    );#(lf)#(lf)let TagWithPositions =#(lf)    TicketTagVersion#(lf)    | extend  #(lf)        FirstUnderscore = indexof(VersionNumber, ""_""),#(lf)        SecondUnderscore = indexof(VersionNumber, ""_"", indexof(VersionNumber, ""_"") + 1);#(lf)#(lf)let TagWithParts =#(lf)    TagWithPositions#(lf)    | extend #(lf)        Major = iif(FirstUnderscore > 0, substring(VersionNumber, 0, FirstUnderscore), VersionNumber),#(lf)        Minor = iif(FirstUnderscore > 0 and SecondUnderscore > 0, #(lf)                    substring(VersionNumber, FirstUnderscore + 1, SecondUnderscore - FirstUnderscore - 1),#(lf)                    iif(FirstUnderscore > 0, substring(VersionNumber, FirstUnderscore + 1), ""0"")),#(lf)        Patch = iif(SecondUnderscore > 0, substring(VersionNumber, SecondUnderscore + 1), ""0"");#(lf)#(lf)let TagWithVersionPadding =#(lf)    TagWithParts#(lf)    | extend #(lf)        MajorVersion = PadLeft3(Major),#(lf)        MinorVersion = PadLeft3(Minor),#(lf)        PatchVersion = PadLeft3(Patch);#(lf)#(lf)let TagWithSortKey =#(lf)    TagWithVersionPadding#(lf)    | extend SortKey = strcat(MajorVersion, ""."", MinorVersion, ""."", PatchVersion);#(lf)#(lf)TagWithSortKey#(lf)| summarize tag_name = any(tag_name), SortKey = any(SortKey) by tag_id#(lf)| order by SortKey asc, tag_id asc#(lf)| serialize#(lf)| extend TagSortOrder = row_number()#(lf)| project ['Tag Name'] = tag_name, ['Tag ID'] = tag_id, TagSortOrder#(lf)", [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null])
				in
				    Source

		annotation BestPracticeAnalyzer_IgnoreRules = {"RuleIDs":["MINIMIZE_POWER_QUERY_TRANSFORMATIONS"]}

	annotation PBI_ResultType = Table

	annotation BestPracticeAnalyzer_IgnoreRules = {"RuleIDs":["OBJECTS_WITH_NO_DESCRIPTION","PARTITION_NAME_SHOULD_MATCH_TABLE_NAME_FOR_SINGLE_PARTITION_TABLES"]}

	annotation PBI_NavigationStepName = Navigation

